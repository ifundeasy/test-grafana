# NOTE: https://medium.com/@martinko.komorny/grafana-agent-alloy-loki-minio-grafana-in-kubernetes-4fe4894b1341

loki:
  commonConfig:
    replication_factor: 1
  schemaConfig:
    configs:
      - from: "2025-01-01"
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: loki_index_
          period: 24h
  pattern_ingester:
    enabled: true
  limits_config:
    allow_structured_metadata: true
    volume_enabled: true
  ruler:
    enable_api: true

  storage:
    type: s3
    use_thanos_objstore: false
    bucketNames:
      chunks: grafana-loki-chunks
      ruler: grafana-loki-ruler
      admin: grafana-loki-admin
    s3:
      # s3 URL can be used to specify the endpoint, access key, secret key, and bucket name this works well for S3 compatible storages or are hosting Loki on-premises and want to use S3 as the storage backend. Either use the s3 URL or the individual fields below (AWS endpoint, region, secret).
      # s3: s3://access_key:secret_access_key@custom_endpoint/bucket_name
      endpoint: 10.140.0.102:9000
      region: us-east-1
      accessKeyId: <youraccess>
      secretAccessKey: <youraccesskey>
      insecure: true # minio/localstack = true, AWS S3 = false
      s3ForcePathStyle: true # minio/localstack = true, AWS S3 = false
      signatureVersion: v4 # safe default
      disable_dualstack: true
      backoff_config: {}
      http_config:
        idle_conn_timeout: 90s
        response_header_timeout: 0s

deploymentMode: SingleBinary

singleBinary:
  replicas: 1

# Zero out replica counts of other deployment modes
backend:
  replicas: 0
read:
  replicas: 0
write:
  replicas: 0

ingester:
  replicas: 0
querier:
  replicas: 0
queryFrontend:
  replicas: 0
queryScheduler:
  replicas: 0
distributor:
  replicas: 0
compactor:
  replicas: 0
indexGateway:
  replicas: 0
bloomCompactor:
  replicas: 0
bloomGateway:
  replicas: 0

minio:
  enabled: false

lokiCanary:
  enabled: false

test:
  enabled: false
