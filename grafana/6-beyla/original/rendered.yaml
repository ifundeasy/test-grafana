---
# Source: beyla/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: beyla
  namespace: default
  labels:
    helm.sh/chart: beyla-1.7.3
    app.kubernetes.io/name: beyla
    app.kubernetes.io/instance: beyla
    app.kubernetes.io/version: "2.0.3"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: beyla
    app.kubernetes.io/component: rbac
automountServiceAccountToken: true
---
# Source: beyla/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: beyla
  namespace: default
  labels:
    helm.sh/chart: beyla-1.7.3
    app.kubernetes.io/name: beyla
    app.kubernetes.io/instance: beyla
    app.kubernetes.io/version: "2.0.3"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: beyla
    app.kubernetes.io/component: config
data:
  beyla-config.yml: |
    discovery:
      services:
        - k8s_namespace: .
      exclude_services:
        - exe_path: ".*alloy.*|.*otelcol.*|.*beyla.*"
    attributes:
      kubernetes:
        enable: true
    filter:
      network:
        k8s_dst_owner_name:
          not_match: '{kube*,*jaeger-agent*,*prometheus*,*promtail*,*grafana-agent*}'
        k8s_src_owner_name:
          not_match: '{kube*,*jaeger-agent*,*prometheus*,*promtail*,*grafana-agent*}'
    prometheus_export:
      path: /metrics
      port: 9090
---
# Source: beyla/templates/cluster-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: beyla
  labels:
    helm.sh/chart: beyla-1.7.3
    app.kubernetes.io/name: beyla
    app.kubernetes.io/instance: beyla
    app.kubernetes.io/version: "2.0.3"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: beyla
    app.kubernetes.io/component: rbac
rules:
  - apiGroups: [ "apps" ]
    resources: [ "replicasets" ]
    verbs: [ "list", "watch" ]
  - apiGroups: [ "" ]
    resources: [ "pods", "services", "nodes" ]
    verbs: [ "list", "watch", "get" ]
---
# Source: beyla/templates/cluster-role-binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: beyla
  labels:
    helm.sh/chart: beyla-1.7.3
    app.kubernetes.io/name: beyla
    app.kubernetes.io/instance: beyla
    app.kubernetes.io/version: "2.0.3"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: beyla
    app.kubernetes.io/component: rbac
subjects:
  - kind: ServiceAccount
    name: beyla
    namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: beyla
---
# Source: beyla/templates/daemon-set.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: beyla
  namespace: default
  labels:
    helm.sh/chart: beyla-1.7.3
    app.kubernetes.io/name: beyla
    app.kubernetes.io/instance: beyla
    app.kubernetes.io/version: "2.0.3"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: beyla
    app.kubernetes.io/component: workload
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: beyla
      app.kubernetes.io/instance: beyla
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: d2abb41e08f6f2d4b2ff6d7c2f9e0581e5211d8fa0fb8c5c3997cfe70dea8543
      labels:
        helm.sh/chart: beyla-1.7.3
        app.kubernetes.io/name: beyla
        app.kubernetes.io/instance: beyla
        app.kubernetes.io/version: "2.0.3"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: beyla
        app.kubernetes.io/component: workload
    spec:
      serviceAccountName: beyla
      hostPID: true
      containers:
        - name: beyla
          image: docker.io/grafana/beyla:2.0.3
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          ports:
          - name: metrics
            containerPort: 9090
            protocol: TCP
          env:
            - name: BEYLA_CONFIG_PATH
              value: "/etc/beyla/config/beyla-config.yml"
          volumeMounts:
            - mountPath: /etc/beyla/config
              name: beyla-config
      volumes:
        - name: beyla-config
          configMap:
            name: beyla
